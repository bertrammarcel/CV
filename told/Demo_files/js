(function() {
try {
    try {
    if (typeof MtVoid === 'undefined') {
	var MtVoid = {
            loc_data : {},
            scr_data : {
  "mt_exem":"",
  "s1":"",
  "mt_id":"1580031",
  "v1":"",
  "mt_nsync":"1",
  "v2":"",
  "mt_excl":"",
  "s3":"",
  "v3":"",
  "s2":"",
  "mt_adid":"247354"
},
            acq_data : {},
            get: function(obj_name, var_name) {
		return this[obj_name][var_name];
	    },
            set: function(obj_name, var_name, value) {
		this[obj_name][var_name] = value;
		return value;
	    },

            parse_qry: function(qs, destination) {
		qs.replace(/[?&]([^=]+)=([^&]*)/g, function(all, key, value) {
		    destination[key]= value;
		});
            },

            makeqs : function() {
		var qs = "";
		var keys = [].concat.call(arguments);
		if (keys.length < 2) {
		    keys = Object.keys(this.acq_data);
		}
		var pairs = [];
		var self = this;
		keys.forEach(function(key) {
		    pairs.push(key+'='+encodeURIComponent(self.acq_data[key]));
		});
		return pairs.join("&");
	    },

	    gcook: function(name) {
		if (document.cookie == null)
		    return null;
		const fetch_cookie = RegExp(name+"=([^;]+)");
		if (fetch_cookie == null)
                    return null;
		const values = document.cookie.match(fetch_cookie);
		if (values == null)
		    return null;
		var abbrev = name.replace(/mt_fp_/g, '');
		this.set('acq_data', abbrev, values[1]);
		return values[1];
	    },

 	    scook: function(name, value, expire_secs) {
        	var date = new Date();
		date.setTime(date.getTime() + expire_secs);
       		var expire = date.toUTCString();
		var domain = window.location.hostname.match("[^.]+\.[^.]+$")[0];
       		var cookie_str = name+'='+value +
		    '; domain='+domain +
                    '; expires='+expire +
                    '; path=/; Secure; SameSite=None';
		document.cookie = cookie_str;
		return document.cookie;
	    }
	}

	MtVoid.parse_qry(window.location.search, MtVoid.loc_data);
	MtVoid.set('acq_data', 'primary-x-request-id', "1abdbb38641d380b0fe560e4f4aa1f2d");
	MtVoid.set('acq_data', 'mt_sec', 'kv');

	var mt_fp_uuid = MtVoid.gcook("mt_fp_uuid")
	if (mt_fp_uuid == null) {
            if (MtVoid.get('scr_data', 'mt_sfp') != null) {
		MtVoid.scook('mt_fp_uuid', "611063e1-5367-4200-9bea-38bbdf099af3", 396*24*60*60*1000);
            }
	}

        if (MtVoid.get('scr_data', 'mt_fpa') != null) {
	    var mt_aid = MtVoid.get("loc_data", "mt_aid");
	    if (mt_aid != null) {
		MtVoid.scook('mt_fp_mt_aid', mt_aid, 30*60*60*24*1000);
            }
	}

	var mt_pqc = MtVoid.get('scr_data', 'mt_pqc');
	if (mt_pqc != null) {
            var pqc = mt_pqc.split(/[:,|]/);
	    pqc.forEach(function(key) {
		if (MtVoid.get('loc_data', key) != null)
    		    MtVoid.set('acq_data', key, MtVoid.get('loc_data', key));
	    })
	}

	var mt_gfp = MtVoid.get('scr_data', 'mt_gfp');
	if (mt_gfp != null) {
	    var gfp = mt_gfp.split(/[:,|]/);
	    gfp.forEach(function(key) {
    		MtVoid.gcook(key)
	    })
	}
    }
}
catch(ex) {
    new Image().src = "//pixel.mathtag.com/error/img?error_domain=jskvstore&what=" + encodeURIComponent(ex.message);
}
(function(){
/**/

})();

}
catch(ex)
{
   new Image().src="//pixel.mathtag.com/error/img?error_domain=wrap_js&what="+encodeURIComponent(ex.message);
}
})();
